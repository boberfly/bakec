#include "bgfx_compute.sh"
#include "common.sh"

NUM_THREADS(64, 1, 1)

#define TANGENT_SPACE 0

BUFFER_RO(positions, vec3, 2)
BUFFER_RO(coords, vec4, 3)
BUFFER_RO(coords_tidx, uint, 4)
//BUFFER_WR(results, float, 5)
IMAGE2D_WR(results, float, 5)

void main()
{
	uint gid = gl_GlobalInvocationID.x + workOffset;

	vec4 coord = coords[gid];
	uint tidx = coords_tidx[gid];
	vec3 p0 = positions[tidx + 0];
	vec3 p1 = positions[tidx + 1];
	vec3 p2 = positions[tidx + 2];
	vec3 p = coord.y * p0 + coord.z * p1 + coord.w * p2;

	uint ridx = gid * 3;
	results[ridx + 0] = p.x;
	results[ridx + 1] = p.y;
	results[ridx + 2] = p.z;
}