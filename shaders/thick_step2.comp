#version 430 core
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

layout (local_size_x = 64) in;

struct Params
{
	uint sampleCount; // Number of rays to sample
	float minDistance;
	float maxDistance;
};

layout(location = 1) uniform uint workOffset;
layout(std430, binding = 2) readonly buffer paramsBuffer { Params params; };
layout(std430, binding = 3) readonly buffer dataBuffer { float data[]; };
layout(std430, binding = 4) writeonly buffer resultAccBuffer { float results[]; };

void main()
{ 
	uint gid = gl_GlobalInvocationID.x;
	uint data_start_idx = gid * params.sampleCount;
	float acc = 0;
	for (uint i = 0; i < params.sampleCount; ++i)
	{
		acc += data[data_start_idx + i];
	}
	uint result_idx = gid + workOffset;
	results[result_idx] = acc / float(params.sampleCount);
}