#include "bgfx_compute.sh"
#include "common.sh"

NUM_THREADS(64, 1, 1)

BUFFER_RO(normals, vec3, 2)
BUFFER_RO(coords, vec4, 3)
BUFFER_RO(coords_tidx, uint, 4)
//BUFFER_WR(results, float, 5)
IMAGE2D_WR(results, float, 5)

void main()
{
	uint gid = gl_GlobalInvocationID.x + workOffset;

	vec4 coord = coords[gid];
	uint tidx = coords_tidx[gid];
	vec3 n0 = normals[tidx + 0];
	vec3 n1 = normals[tidx + 1];
	vec3 n2 = normals[tidx + 2];
	vec3 normal = normalize(coord.y * n0 + coord.z * n1 + coord.w * n2);

	uint ridx = gid * 3;
	results[ridx + 0] = normal.x;
	results[ridx + 1] = normal.y;
	results[ridx + 2] = normal.z;
}