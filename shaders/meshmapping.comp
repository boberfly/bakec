#include "bgfx_compute.sh"
#include "common.sh"

#define RAYCAST_FORWARD 1
#define RAYCAST_BACKWARD 1

NUM_THREADS(64, 1, 1)

BUFFER_RO(pixels, Pix, 4)
BUFFER_RO(positions, vec3, 5)
BUFFER_RO(bvhs, BVH, 6)
BUFFER_WR(r_coords, vec4, 7)
BUFFER_WR(r_tidx, uint, 8)

void main()
{
	uint gid = gl_GlobalInvocationID.x + workOffset;
	if (gid >= workCount) return;

	Pix pix = pixels[gid];
	vec3 p = pix.p;
	vec3 d = pix.d;

	uint tidx = 4294967295;
	vec3 bcoord = vec3(0, 0, 0);
	float t = FLT_MAX;

	
#if RAYCAST_FORWARD
	t = min(t, raycastBVH(p, d, t, tidx, bcoord));
#endif
#if RAYCAST_BACKWARD
	t = min(t, raycastBVH(p, -d, t, tidx, bcoord));
#endif

	r_coords[gid] = vec4(t, bcoord.x, bcoord.y, bcoord.z);
	r_tidx[gid] = tidx;
}
