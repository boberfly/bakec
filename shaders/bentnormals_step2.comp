#include "bgfx_compute.sh"
#include "common.sh"

NUM_THREADS(64, 1, 1)

struct Params
{
	uint sampleCount; // Number of rays to sample
	float minDistance;
	float maxDistance;
};

struct V3 { float x; float y; float z; };

BUFFER_RO(params, Params, 2)
BUFFER_RO(data, vec3, 3)
//BUFFER_WR(results, V3, 4)
IMAGE2D_WR(results, V3, 4)

void main()
{ 
	uint gid = gl_GlobalInvocationID.x;
	uint data_start_idx = gid * params.sampleCount;
	vec3 acc = vec3(0, 0, 0);
	for (uint i = 0; i < params.sampleCount; ++i)
	{
		acc += data[data_start_idx + i];
	}
	vec3 normal = normalize(acc);
	uint result_idx = gid + workOffset;
	results[result_idx].x = normal.x;
	results[result_idx].y = normal.y;
	results[result_idx].z = normal.z;
}